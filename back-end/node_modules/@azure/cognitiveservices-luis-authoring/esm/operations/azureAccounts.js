/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/azureAccountsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a AzureAccounts. */
var AzureAccounts = /** @class */ (function () {
    /**
     * Create a AzureAccounts.
     * @param {LUISAuthoringClientContext} client Reference to the service client.
     */
    function AzureAccounts(client) {
        this.client = client;
    }
    AzureAccounts.prototype.assignToApp = function (appId, options, callback) {
        return this.client.sendOperationRequest({
            appId: appId,
            options: options
        }, assignToAppOperationSpec, callback);
    };
    AzureAccounts.prototype.getAssigned = function (appId, options, callback) {
        return this.client.sendOperationRequest({
            appId: appId,
            options: options
        }, getAssignedOperationSpec, callback);
    };
    AzureAccounts.prototype.removeFromApp = function (appId, options, callback) {
        return this.client.sendOperationRequest({
            appId: appId,
            options: options
        }, removeFromAppOperationSpec, callback);
    };
    AzureAccounts.prototype.listUserLUISAccounts = function (options, callback) {
        return this.client.sendOperationRequest({
            options: options
        }, listUserLUISAccountsOperationSpec, callback);
    };
    return AzureAccounts;
}());
export { AzureAccounts };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var assignToAppOperationSpec = {
    httpMethod: "POST",
    path: "apps/{appId}/azureaccounts",
    urlParameters: [
        Parameters.endpoint,
        Parameters.appId
    ],
    headerParameters: [
        Parameters.armToken
    ],
    requestBody: {
        parameterPath: [
            "options",
            "azureAccountInfoObject"
        ],
        mapper: Mappers.AzureAccountInfoObject
    },
    responses: {
        201: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getAssignedOperationSpec = {
    httpMethod: "GET",
    path: "apps/{appId}/azureaccounts",
    urlParameters: [
        Parameters.endpoint,
        Parameters.appId
    ],
    headerParameters: [
        Parameters.armToken
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AzureAccountInfoObject"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var removeFromAppOperationSpec = {
    httpMethod: "DELETE",
    path: "apps/{appId}/azureaccounts",
    urlParameters: [
        Parameters.endpoint,
        Parameters.appId
    ],
    headerParameters: [
        Parameters.armToken
    ],
    requestBody: {
        parameterPath: [
            "options",
            "azureAccountInfoObject"
        ],
        mapper: Mappers.AzureAccountInfoObject
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listUserLUISAccountsOperationSpec = {
    httpMethod: "GET",
    path: "azureaccounts",
    urlParameters: [
        Parameters.endpoint
    ],
    headerParameters: [
        Parameters.armToken
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AzureAccountInfoObject"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=azureAccounts.js.map
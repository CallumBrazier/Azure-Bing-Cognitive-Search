import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { LUISAuthoringClientContext } from "../lUISAuthoringClientContext";
/** Class representing a AzureAccounts. */
export declare class AzureAccounts {
    private readonly client;
    /**
     * Create a AzureAccounts.
     * @param {LUISAuthoringClientContext} client Reference to the service client.
     */
    constructor(client: LUISAuthoringClientContext);
    /**
     * Assigns an Azure account to the application.
     * @summary apps - Assign a LUIS Azure account to an application
     * @param appId The application ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.AzureAccountsAssignToAppResponse>
     */
    assignToApp(appId: string, options?: Models.AzureAccountsAssignToAppOptionalParams): Promise<Models.AzureAccountsAssignToAppResponse>;
    /**
     * @param appId The application ID.
     * @param callback The callback
     */
    assignToApp(appId: string, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    assignToApp(appId: string, options: Models.AzureAccountsAssignToAppOptionalParams, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * Gets the LUIS Azure accounts assigned to the application for the user using his ARM token.
     * @summary apps - Get LUIS Azure accounts assigned to the application
     * @param appId The application ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.AzureAccountsGetAssignedResponse>
     */
    getAssigned(appId: string, options?: Models.AzureAccountsGetAssignedOptionalParams): Promise<Models.AzureAccountsGetAssignedResponse>;
    /**
     * @param appId The application ID.
     * @param callback The callback
     */
    getAssigned(appId: string, callback: msRest.ServiceCallback<Models.AzureAccountInfoObject[]>): void;
    /**
     * @param appId The application ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    getAssigned(appId: string, options: Models.AzureAccountsGetAssignedOptionalParams, callback: msRest.ServiceCallback<Models.AzureAccountInfoObject[]>): void;
    /**
     * Removes assigned Azure account from the application.
     * @summary apps - Removes an assigned LUIS Azure account from an application
     * @param appId The application ID.
     * @param [options] The optional parameters
     * @returns Promise<Models.AzureAccountsRemoveFromAppResponse>
     */
    removeFromApp(appId: string, options?: Models.AzureAccountsRemoveFromAppOptionalParams): Promise<Models.AzureAccountsRemoveFromAppResponse>;
    /**
     * @param appId The application ID.
     * @param callback The callback
     */
    removeFromApp(appId: string, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * @param appId The application ID.
     * @param options The optional parameters
     * @param callback The callback
     */
    removeFromApp(appId: string, options: Models.AzureAccountsRemoveFromAppOptionalParams, callback: msRest.ServiceCallback<Models.OperationStatus>): void;
    /**
     * Gets the LUIS Azure accounts for the user using his ARM token.
     * @summary user - Get LUIS Azure accounts
     * @param [options] The optional parameters
     * @returns Promise<Models.AzureAccountsListUserLUISAccountsResponse>
     */
    listUserLUISAccounts(options?: Models.AzureAccountsListUserLUISAccountsOptionalParams): Promise<Models.AzureAccountsListUserLUISAccountsResponse>;
    /**
     * @param callback The callback
     */
    listUserLUISAccounts(callback: msRest.ServiceCallback<Models.AzureAccountInfoObject[]>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listUserLUISAccounts(options: Models.AzureAccountsListUserLUISAccountsOptionalParams, callback: msRest.ServiceCallback<Models.AzureAccountInfoObject[]>): void;
}
//# sourceMappingURL=azureAccounts.d.ts.map
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var appId = {
    parameterPath: "appId",
    mapper: {
        required: true,
        serializedName: "appId",
        type: {
            name: "Uuid"
        }
    }
};
export var appName = {
    parameterPath: [
        "options",
        "appName"
    ],
    mapper: {
        serializedName: "appName",
        type: {
            name: "String"
        }
    }
};
export var armToken = {
    parameterPath: [
        "options",
        "armToken"
    ],
    mapper: {
        serializedName: "ArmToken",
        type: {
            name: "String"
        }
    }
};
export var cChildId = {
    parameterPath: "cChildId",
    mapper: {
        required: true,
        serializedName: "cChildId",
        type: {
            name: "Uuid"
        }
    }
};
export var cEntityId = {
    parameterPath: "cEntityId",
    mapper: {
        required: true,
        serializedName: "cEntityId",
        type: {
            name: "Uuid"
        }
    }
};
export var clEntityId = {
    parameterPath: "clEntityId",
    mapper: {
        required: true,
        serializedName: "clEntityId",
        type: {
            name: "Uuid"
        }
    }
};
export var culture = {
    parameterPath: "culture",
    mapper: {
        required: true,
        serializedName: "culture",
        type: {
            name: "String"
        }
    }
};
export var deleteUtterances = {
    parameterPath: [
        "options",
        "deleteUtterances"
    ],
    mapper: {
        serializedName: "deleteUtterances",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var domainName = {
    parameterPath: "domainName",
    mapper: {
        required: true,
        serializedName: "domainName",
        type: {
            name: "String"
        }
    }
};
export var enableNestedChildren = {
    parameterPath: [
        "options",
        "enableNestedChildren"
    ],
    mapper: {
        serializedName: "enableNestedChildren",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var endpoint = {
    parameterPath: "endpoint",
    mapper: {
        required: true,
        serializedName: "Endpoint",
        defaultValue: '',
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var entityId = {
    parameterPath: "entityId",
    mapper: {
        required: true,
        serializedName: "entityId",
        type: {
            name: "Uuid"
        }
    }
};
export var exampleId = {
    parameterPath: "exampleId",
    mapper: {
        required: true,
        serializedName: "exampleId",
        type: {
            name: "Number"
        }
    }
};
export var force = {
    parameterPath: [
        "options",
        "force"
    ],
    mapper: {
        serializedName: "force",
        defaultValue: false,
        type: {
            name: "Boolean"
        }
    }
};
export var format = {
    parameterPath: "format",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "format",
        defaultValue: 'lu',
        type: {
            name: "String"
        }
    }
};
export var hChildId = {
    parameterPath: "hChildId",
    mapper: {
        required: true,
        serializedName: "hChildId",
        type: {
            name: "Uuid"
        }
    }
};
export var hEntityId = {
    parameterPath: "hEntityId",
    mapper: {
        required: true,
        serializedName: "hEntityId",
        type: {
            name: "Uuid"
        }
    }
};
export var intentId = {
    parameterPath: "intentId",
    mapper: {
        required: true,
        serializedName: "intentId",
        type: {
            name: "Uuid"
        }
    }
};
export var itemId = {
    parameterPath: "itemId",
    mapper: {
        required: true,
        serializedName: "itemId",
        type: {
            name: "Number"
        }
    }
};
export var modelId = {
    parameterPath: "modelId",
    mapper: {
        required: true,
        serializedName: "modelId",
        type: {
            name: "String"
        }
    }
};
export var patternId = {
    parameterPath: "patternId",
    mapper: {
        required: true,
        serializedName: "patternId",
        type: {
            name: "Uuid"
        }
    }
};
export var phraselistId = {
    parameterPath: "phraselistId",
    mapper: {
        required: true,
        serializedName: "phraselistId",
        type: {
            name: "Number"
        }
    }
};
export var prebuiltId = {
    parameterPath: "prebuiltId",
    mapper: {
        required: true,
        serializedName: "prebuiltId",
        type: {
            name: "Uuid"
        }
    }
};
export var regexEntityId = {
    parameterPath: "regexEntityId",
    mapper: {
        required: true,
        serializedName: "regexEntityId",
        type: {
            name: "Uuid"
        }
    }
};
export var roleId = {
    parameterPath: "roleId",
    mapper: {
        required: true,
        serializedName: "roleId",
        type: {
            name: "Uuid"
        }
    }
};
export var skip = {
    parameterPath: [
        "options",
        "skip"
    ],
    mapper: {
        serializedName: "skip",
        defaultValue: 0,
        constraints: {
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
export var slotName = {
    parameterPath: "slotName",
    mapper: {
        required: true,
        serializedName: "slotName",
        type: {
            name: "String"
        }
    }
};
export var subListId = {
    parameterPath: "subListId",
    mapper: {
        required: true,
        serializedName: "subListId",
        type: {
            name: "Number"
        }
    }
};
export var take = {
    parameterPath: [
        "options",
        "take"
    ],
    mapper: {
        serializedName: "take",
        defaultValue: 100,
        constraints: {
            InclusiveMaximum: 500,
            InclusiveMinimum: 0
        },
        type: {
            name: "Number"
        }
    }
};
export var versionId0 = {
    parameterPath: "versionId",
    mapper: {
        required: true,
        serializedName: "versionId",
        type: {
            name: "String"
        }
    }
};
export var versionId1 = {
    parameterPath: [
        "options",
        "versionId"
    ],
    mapper: {
        serializedName: "versionId",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map